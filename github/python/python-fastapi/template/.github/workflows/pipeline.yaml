name: CodePusher Pipelines

on:
  push:
    branches:
      - main
  create:
    tags:
      - 'v*'
      - 'demo*'
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get-image-tag.outputs.image_tag }}
      repo_name: ${{ steps.extract-repo-name.outputs.repo_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials for ECR (Only on push or tag)
        if: github.event_name != 'pull_request'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Extract Repository Name (Only on push or tag)
        if: github.event_name != 'pull_request'
        id: extract-repo-name
        run: |
          echo "repo_name=$(echo ${{ github.repository }} | sed 's/.*\///')" >> "$GITHUB_OUTPUT"

      - name: Login to Amazon ECR (Only on push or tag)
        uses: aws-actions/amazon-ecr-login@v2
        if: github.event_name != 'pull_request'

      - name: Create/Update ECR Repository (Only on push or tag)
        uses: int128/create-ecr-repository-action@v1
        if: github.event_name != 'pull_request'
        id: login-ecr
        with:
          repository: ${{ steps.extract-repo-name.outputs.repo_name }}

      - name: Get Image Tag (Only on push or tag)
        if: github.event_name != 'pull_request'
        id: get-image-tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "image_tag=${TAG_NAME}" >> "$GITHUB_OUTPUT"
          else
            SHORT_SHA=$(echo "${GITHUB_SHA::7}")
            echo "image_tag=${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build, Tag, and Push Docker Image to Amazon ECR (Only on push or tag)
        if: github.event_name != 'pull_request'
        env:
          REPOSITORY: ${{ steps.login-ecr.outputs.repository-uri }}
          IMAGE_TAG: ${{ steps.get-image-tag.outputs.image_tag }}
        run: |
          docker build -t $REPOSITORY:$IMAGE_TAG .
          docker push $REPOSITORY:$IMAGE_TAG

  deploy-dev:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Verify if chart repository exists
        id: check-repo
        run: |
          REPO_NAME="${{ needs.build.outputs.repo_name }}-chart"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository_owner }}/${REPO_NAME})
          if [[ "$RESPONSE" -ne 200 ]]; then
            echo "Repository $REPO_NAME does not exist. Skipping job."
            echo "skip=true" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi
    
      - name: Skip job if chart repository does not exist
        if: steps.check-repo.outputs.skip == 'true'
        run: echo "Skipping deploy-dev job because chart repository does not exist."
          
      - uses: actions/create-github-app-token@v1
        id: app-token
        if: steps.check-repo.outputs.skip != 'true'
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout Chart Repo
        if: steps.check-repo.outputs.skip != 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}-chart
          ref: main
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: '[DEVELOP] Bump to version ${{ needs.build.outputs.image_tag }}'
        if: steps.check-repo.outputs.skip != 'true'
        run: |
          sed -i "s/tag:.*/tag: \"${{ needs.build.outputs.image_tag }}\"/g" environments/platform-dev/values.yaml

      - name: Commit changes
        if: steps.check-repo.outputs.skip != 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add environments/platform-dev/values.yaml
          git commit -m "bump image to ${{ needs.build.outputs.image_tag }} version"

      - name: Create pull request
        if: steps.check-repo.outputs.skip != 'true'
        uses: peter-evans/create-pull-request@v3
        id: create-pr
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: '[DEVELOP] Bump to version ${{ needs.build.outputs.image_tag }}'
          title: '[DEVELOP] Bump to version ${{ needs.build.outputs.image_tag }}'
          body: |
            [DEVELOP] This PR updates the IMAGE_TAG in values.yaml to ${{ needs.build.outputs.image_tag }}.
          branch: bump-image-tag-${{ needs.build.outputs.image_tag }}
          base: main
          labels: auto-merge
          assignees: "codepusher-bot"

      - name: 'Merge pull request'
        if: steps.check-repo.outputs.skip != 'true'
        uses: 'actions/github-script@v7'
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              pull_number: ${{ steps.create-pr.outputs.pull-request-number }},
              repo: "${{ needs.build.outputs.repo_name }}-chart",
            })

  deploy-prod:
    if: github.event_name == 'create' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout Chart Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}-chart
          ref: main
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: '[PRODUCTION] Bump to version ${{ needs.build.outputs.image_tag }}'
        run: |
          sed -i "s/tag:.*/tag: \"${{ needs.build.outputs.image_tag }}\"/g" environments/platform-prod/values.yaml

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add environments/platform-prod/values.yaml
          git commit -m "bump image to ${{ needs.build.outputs.image_tag }} version"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        id: create-pr
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: '[PRODUCTION] Bump to version ${{ needs.build.outputs.image_tag }}'
          title: '[PRODUCTION] Bump to version ${{ needs.build.outputs.image_tag }}'
          body: |
            [PRODUCTION] This PR updates the IMAGE_TAG in values.yaml to ${{ needs.build.outputs.image_tag }}.
          branch: bump-image-tag-prod-${{ needs.build.outputs.image_tag }}
          base: main
          labels: auto-merge
          assignees: "codepusher-bot"

      - name: 'Merge pull request'
        uses: 'actions/github-script@v7'
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              pull_number: ${{ steps.create-pr.outputs.pull-request-number }},
              repo: "${{ needs.build.outputs.repo_name }}-chart",
            })
